name: publish_package

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches:
      - "main"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Extract SHA
        id: extract_sha
        run: echo "short_sha=$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ steps.extract_sha.outputs.short_sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Create env file
        run: echo "$ENV_CONTENT" > .env
        shell: bash
        env:
            ENV_CONTENT: ${{secrets.ENV_STAGING}}

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: devorai/owallet-landing-page:${{ steps.extract_sha.outputs.short_sha }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

  swarm:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Extract SHA
        id: extract_sha
        run: echo "short_sha=$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_OUTPUT

      - name: Deploy to Swarm
        run: |
          curl -X POST \
           ${{ secrets.WEBHOOK_SERVICE_STAGING }}?tag=${{ steps.extract_sha.outputs.short_sha }}

      - name: Send discord message
        uses: appleboy/discord-action@master
        with:
          webhook_id: ${{ secrets.WEBHOOK_ID }}
          webhook_token: ${{ secrets.WEBHOOK_TOKEN }}
          username: "GitBot"
          message: ":loudspeaker: [staging] Repo agents-land-launchpad-frontend has just deployed to swarm with tag: ${{ steps.extract_sha.outputs.short_sha }}"