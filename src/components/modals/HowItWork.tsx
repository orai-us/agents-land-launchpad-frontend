import UserContext from '@/context/UserContext';
import { coinInfo, replyInfo, tradeInfo, userInfo } from '@/utils/types';
import { postReply } from '@/utils/util';
import React, { ChangeEvent, useContext, useMemo, useRef, useState } from 'react';
import { errorAlert, successAlert } from '../others/ToastGroup';

import { uploadImage } from '@/utils/fileUpload';
import { twMerge } from 'tailwind-merge';

interface ModalProps {
  isOpen: boolean;
  closeModal: () => void;
}

const HowItWorkModal: React.FC<ModalProps> = ({ isOpen, closeModal }) => {
  const { postReplyModal, setPostReplyModal, user } = useContext(UserContext);

  return (
    <div className={twMerge('fixed w-full inset-0 flex items-center justify-center z-50 backdrop-blur-md', !isOpen && 'hidden')}>
      <div className="flex w-full max-w-[480px] sm:max-w-xl flex-col p-6 rounded-lg gap-3 bg-[#13141D] relative">
        <div className="">
          <h2 className="text-[18px] font-medium">How it work?</h2>
          <button onClick={() => closeModal()} className="absolute top-6 right-6 text-gray-600">
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="25" viewBox="0 0 24 25" fill="none">
              <path
                d="M13.5909 12.5L18.0441 8.04687C18.2554 7.8359 18.3743 7.54962 18.3745 7.25099C18.3748 6.95237 18.2564 6.66587 18.0455 6.45453C17.8345 6.24319 17.5482 6.12431 17.2496 6.12404C16.951 6.12378 16.6645 6.24215 16.4531 6.45312L12 10.9062L7.54687 6.45312C7.33553 6.24178 7.04888 6.12305 6.75 6.12305C6.45111 6.12305 6.16447 6.24178 5.95312 6.45312C5.74178 6.66447 5.62305 6.95111 5.62305 7.25C5.62305 7.54888 5.74178 7.83553 5.95312 8.04687L10.4062 12.5L5.95312 16.9531C5.74178 17.1645 5.62305 17.4511 5.62305 17.75C5.62305 18.0489 5.74178 18.3355 5.95312 18.5469C6.16447 18.7582 6.45111 18.8769 6.75 18.8769C7.04888 18.8769 7.33553 18.7582 7.54687 18.5469L12 14.0937L16.4531 18.5469C16.6645 18.7582 16.9511 18.8769 17.25 18.8769C17.5489 18.8769 17.8355 18.7582 18.0469 18.5469C18.2582 18.3355 18.3769 18.0489 18.3769 17.75C18.3769 17.4511 18.2582 17.1645 18.0469 16.9531L13.5909 12.5Z"
                fill="#9192A0"
              />
            </svg>
          </button>
          <div className="mt-4 mb-8 text-[14px] text-[#9192A0]">Tokenizing Your AI Agent</div>
          <div className="w-full flex justify-between items-center bg-[#080A14] border border-[#1A1C28] rounded-lg p-4">
            <div className="flex-1 flex items-center">
              <svg xmlns="http://www.w3.org/2000/svg" width="32" height="33" viewBox="0 0 32 33" fill="none">
                <rect y="0.5" width="32" height="32" rx="8" fill="#FCFCFC" />
                <path
                  d="M24.0791 14.155C23.0542 14.155 22.0896 14.7488 21.5622 15.7037C21.018 16.6907 20.0317 17.2868 18.9783 17.2868C18.8872 17.2868 18.7954 17.2821 18.7029 17.2727C17.5664 17.1607 16.5881 16.3672 16.1772 15.2259C16.1699 15.2079 16.1641 15.1898 16.1568 15.171C15.4276 13.0427 13.6698 11.5254 11.6285 11.183C11.6263 11.183 11.6234 11.183 11.6212 11.183C11.555 11.1721 11.4894 11.1627 11.4224 11.1541C11.3859 11.1494 11.3488 11.1454 11.3116 11.1415C11.2752 11.1368 11.2381 11.1337 11.2016 11.1306C11.1638 11.1282 11.1273 11.1251 11.0894 11.1227C11.0654 11.1212 11.0414 11.1204 11.0166 11.118C10.9867 11.1165 10.9561 11.1157 10.9263 11.1141C10.9139 11.1141 10.9022 11.1141 10.8898 11.1141C10.8447 11.1141 10.7988 11.1125 10.7536 11.1125C10.5059 11.1125 10.2612 11.1298 10.0208 11.1619C9.92532 11.1752 9.83062 11.1917 9.73664 11.2097C9.68929 11.2175 9.64121 11.2277 9.59386 11.2387C9.50061 11.2606 9.40882 11.2825 9.31776 11.3076H9.3163C9.22451 11.3335 9.13418 11.3617 9.0453 11.3914H9.04385C8.81874 11.4666 8.59947 11.5567 8.38675 11.6601C8.28039 11.7118 8.17694 11.7682 8.07423 11.8254C8.0225 11.8544 7.97151 11.8834 7.92052 11.9155C6.76367 12.6236 5.85525 13.7508 5.37444 15.1029C5.33292 15.2204 5.29431 15.3402 5.25934 15.4609C5.25934 15.4609 5.25934 15.4609 5.25934 15.4624C5.23166 15.5588 5.20616 15.6551 5.18139 15.7538V15.7554C5.15808 15.8533 5.13696 15.952 5.11729 16.0523C5.10709 16.1032 5.09908 16.1549 5.09033 16.2058C5.07358 16.3061 5.05828 16.4087 5.0459 16.5113C5.01603 16.7698 5 17.033 5 17.2994C5 17.5657 5.01603 17.8289 5.0459 18.0874C5.05828 18.19 5.07358 18.2919 5.09033 18.3929C5.09835 18.4438 5.10709 18.4955 5.11729 18.5465C5.14424 18.6843 5.17411 18.8222 5.20908 18.9569C5.24404 19.0917 5.28338 19.2248 5.32564 19.3549C5.9077 21.1229 7.21388 22.5243 8.85881 23.1431C8.92 23.1666 8.9812 23.1877 9.04312 23.2089C9.04312 23.2089 9.04312 23.2097 9.04458 23.2089C9.13418 23.2387 9.22378 23.2661 9.31557 23.2927H9.31703C9.40809 23.3178 9.49988 23.3405 9.59313 23.3617C9.64048 23.3726 9.68856 23.382 9.73591 23.3906C9.82916 23.4087 9.92459 23.4251 10.02 23.4384C10.2604 23.4705 10.5052 23.4878 10.7529 23.4878C10.798 23.4878 10.8439 23.487 10.8891 23.4862C10.9015 23.4862 10.9132 23.4854 10.9255 23.4854C10.9554 23.4846 10.986 23.4839 11.0159 23.4815C11.0399 23.4807 11.0639 23.4792 11.0887 23.4768C11.1266 23.4745 11.163 23.4713 11.2009 23.469C11.2373 23.4666 11.2745 23.4627 11.3109 23.458C11.3488 23.4541 11.3852 23.4502 11.4216 23.4455C11.4908 23.4369 11.5593 23.4267 11.6271 23.4157C13.6027 23.0851 15.314 21.654 16.0832 19.6329C16.108 19.5648 16.1335 19.4974 16.1568 19.4285C16.1634 19.412 16.1685 19.3956 16.1743 19.3791C16.5852 18.2355 17.5643 17.438 18.7022 17.326C18.7947 17.3174 18.8865 17.3127 18.9775 17.3127C20.0309 17.3127 21.0173 17.9088 21.5615 18.8958C22.0889 19.8507 23.0534 20.4437 24.0784 20.4437C25.6898 20.4437 27.0004 19.0345 27.0004 17.3017C27.0004 15.569 25.6898 14.1597 24.0784 14.1597V14.1566L24.0791 14.155ZM16.5072 17.3417C15.9922 17.4568 15.5121 17.5861 15.0765 17.7474C14.2525 18.0506 13.5882 18.4689 13.1438 19.1206C13.1285 19.1441 13.1132 19.1676 13.0964 19.1896C12.5625 19.9541 11.7108 20.4492 10.7543 20.4492C9.13782 20.4492 7.8229 19.0353 7.8229 17.297C7.8229 15.5588 9.13782 14.1449 10.7543 14.1449C11.7101 14.1449 12.561 14.6391 13.0964 15.4037C13.119 15.4382 13.1409 15.4718 13.1642 15.504C13.6086 16.1385 14.2664 16.5489 15.0772 16.8482C15.5128 17.0088 15.9929 17.138 16.508 17.2532C16.575 17.268 16.6427 17.2829 16.7105 17.297C16.642 17.3111 16.5742 17.3268 16.508 17.3409H16.5072V17.3417Z"
                  fill="#080A14"
                />
              </svg>

              <div className="ml-4 text-[14px] font-medium">
                <p className="text-[#F3F4F6]">Distilled AI (Mesh)</p>
                <p className="text-[#9192A0]">Private Intelligence</p>
              </div>
            </div>
            <a target="_blank" href="https://mesh.distilled.ai/" className="cursor-pointer p-2 flex items-center bg-[#1A1C28] rounded text-[#E8E9EE] text-[14px] hover:brightness-125">
              CREATE
              <svg xmlns="http://www.w3.org/2000/svg" width="20" height="21" viewBox="0 0 20 21" fill="none" className="ml-8">
                <path
                  d="M7.3231 6.35013C6.86286 6.35013 6.48976 5.97703 6.48976 5.51679C6.48976 5.05656 6.86286 4.68346 7.3231 4.68346L14.1501 4.68346C15.0706 4.68346 15.8168 5.42965 15.8168 6.35013L15.8168 13.1771C15.8168 13.6374 15.4437 14.0104 14.9834 14.0104C14.5232 14.0104 14.1501 13.6374 14.1501 13.1771L14.1501 7.52864L5.84996 15.8288C5.52452 16.1542 4.99688 16.1542 4.67145 15.8288C4.34601 15.5033 4.34601 14.9757 4.67145 14.6503L12.9716 6.35013L7.3231 6.35013Z"
                  fill="#9192A0"
                />
              </svg>
            </a>
          </div>
          <div className="flex relative mt-6">
            <div className="absolute left-[16px] top-0 h-full border border-dashed border-[#585A6B]"></div>
            <div className="flex flex-col gap-6 z-10">
              {STEP_WORK.map((step, key) => {
                return (
                  <div key={`${key}-step-work-`} className="flex items-center gap-4 text-[14px] text-[#E8E9EE]">
                    <div className="p-[10px] w-8 h-8 flex items-center justify-center rounded-full bg-[#1A1C28]">{key + 1}</div>
                    <div>{step}</div>
                  </div>
                );
              })}
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default HowItWorkModal;

const STEP_WORK = [
  'Create & customize your agent at Mesh',
  'Bind Telegram and Twitter',
  'Publish your agent',
  'Initialize token for your agent',
  'Wait for bonding curve when it reaches $66K market cap',
  'List graduated token at Raydium and OraiDEX',
  'Change the agent owner to token holders',
  'Govern the agent through DAO'
];
